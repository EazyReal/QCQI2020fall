%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: trans.dvi
%%BoundingBox: 132 464 379 661
%%DocumentFonts: Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o trans.eps trans
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.09.16:1704
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (trans.dvi)
@start
%DVIPSBitmapFont: Fa cmr6 6 3
/Fa 3 53 df<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C
1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA
0380380600185A5A383FFFF85AB512F0A216217CA01E>50 D<13FF000313C0380F03E038
1C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2
380003E0EB00F01478147C143E143F1230127812FCA2143E48137E0060137C003813F838
1E03F0380FFFC00001130018227DA01E>I<14E01301A213031307A2130D131D13391331
136113E113C1EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6
EB03F0EB3FFFA218227DA11E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi6 6 1
/Fb 1 26 df<0003B512FC120F5A4814F8397818180000E01338EAC03000001330A21370
1360EBE070A21478EA01C0A21203EB807C0007133C143E380F003C000613181E167D9424
>25 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi9 9 2
/Fc 2 59 df<013FB6128090B712C01203481680481600271F00C018C7FC001C1438EA38
010070143000601380EAE00300001470A2EB0700A25B15F0130E131EA2013E7F133C137C
A213FC497FA2000180A2485A157EA2D801C013382A217E9F2C>25
D<123C127E12FFA4127E123C08087A8715>58 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr8 8 1
/Fd 1 51 df<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012
F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A
495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814
C0B6FCA21C2C7DAB23>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr12 12 2
/Fe 2 42 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B
12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA3127E
A4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03
C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C7E
A26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A21301
A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB1F
00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA26
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy10 12 2
/Ff 2 107 df<1B3C1B7CF201F8021FB912F091BA12E001031980010FF0FE00013F18F8
4918C001F8C7D807F0C9FCD803F0140F4848141F120F48485D003F153FA2127F5F484814
7F90C8FC5A00F85E00E015FFC9FCA294CAFC5DA35E1503A35E1507A35E150FA35E151FA3
5E153FA35E157FA35E15FFA293CBFCA25CA25D1403A25DA24A5AA34A5AA24A5AA25D143F
5D027ECCFC147C14604E4E7CC636>84 D<126012F0B3B3B3B3B3A81260046474CA1C>
106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi12 12 1
/Fg 1 113 df<D903E0EB3F80D90FF8EBFFE0903A1C7C03C0F8903A383E07007C902670
3F1E137E9026601F387F5D01E00160EB1F8001C013E04A5A00014A14C0018090C7FCA200
035B1300147EC7FC02FE143FA25CA20101157F18805CA2010315FF18005C5F010714015F
4A13035F010F14075F4C5A5F496C495A4CC7FC02B8137E02985B90393F9C01F891388F07
E0913803FF80DA00FCC8FC4990C9FCA2137EA213FEA25BA21201A25BA21203A21207B512
F0A25C323F83AB31>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr9 9 20
/Fh 20 117 df<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F00
01F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A239
0F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48
D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060
130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F80150014
7E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C14
70001FB512F05A5AB612E0A31D327CB126>I<EC01C0A214031407A2140F141FA2143F14
7F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180120313
001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337E
B226>52 D<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>54 D<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E000
0EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E090
38F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D807
8013F0390F007FF8001E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA3
7E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F
347DB126>56 D<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0
160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3A248
7EB512F8A32C337DB234>80 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF
48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F0
6C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC015
0F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B5
12E0011F138026C003FEC7FC22377CB42B>83 D<EB7F803803FFF0380F80FC381C003E00
3F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA
3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013
003900FE003C22237DA126>97 D<EB07F8EB3FFF9038FC07C03901F000E03903E003F038
07C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F1438
6D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>99
D<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F001401
4814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D1370
6C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>101
D<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB5
12F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8
E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB
800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380F
FFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C
15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA07E0
12FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>108 D<2703F01FE013FF00FF9026
7FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE1470496D48
6C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC0
00FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B5
38C7FFFCA326217EA02B>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F
6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6D
EB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A32530
7EA02B>112 D<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F
8049C7FCA35BB2487EB512E0A31A217FA01E>114 D<EBFF06000713CE381F00FE003C13
3E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB
0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038
C07F8019237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F0
00AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 589 2061 a
 /PSfrag where{pop(p)[[0(Bl)1 0]](|T(p)|2XX)[[1(Bl)1 0]](0)[[2(Bl)1
0]](0.2)[[3(Bl)1 0]](0.4)[[4(Bl)1 0]](0.6)[[5(Bl)1 0]](0.8)[[6(Bl)1
0]](1)[[7(Bl)1 0]](pi4)[[8(Bl)1 0]](pi2)[[9(Bl)1 0]](3pi4)[[10(Bl)1
0]](pi)[[11(Bl)1 0]]12 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 589 2061 a @beginspecial 32 @llx 180
@lly 551 @urx 594 @ury 2376 @rwi @setspecial
%%BeginDocument: t.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: t.eps
%%CreationDate: 09/16/2002  15:41:41
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    32   180   551   594
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup string
  currentfile exch readhexstring pop
  /bmap xdef pop pop} bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  {bmap} image gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    32   180   551   594
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  174   207  6223  4975 MR c np
91 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4226 5356 0 0 -4226 899 4615 4 MP
PP
-5356 0 0 4226 5356 0 0 -4226 899 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899 4615 mt 6255 4615 L
 899 4615 mt  899  389 L
 899 4615 mt  899 4561 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 240 FMSR

 833 4872 mt 
(0) s
2238 4615 mt 2238 4561 L
2078 4872 mt 
(pi4) s
3577 4615 mt 3577 4561 L
3417 4872 mt 
(pi2) s
4916 4615 mt 4916 4561 L
4690 4872 mt 
(3pi4) s
6255 4615 mt 6255 4561 L
6162 4872 mt 
(pi) s
 899 4615 mt  952 4615 L
 731 4704 mt 
(0) s
 899 3769 mt  952 3769 L
 531 3858 mt 
(0.2) s
 899 2924 mt  952 2924 L
 531 3013 mt 
(0.4) s
 899 2079 mt  952 2079 L
 531 2168 mt 
(0.6) s
 899 1234 mt  952 1234 L
 531 1323 mt 
(0.8) s
 899  389 mt  952  389 L
 731  478 mt 
(1) s
gs 899 389 5357 4227 MR c np
11 2 11 4 11 6 10 10 11 12 11 14 10 17 11 19 
11 22 11 24 10 26 11 28 11 30 10 32 11 34 11 36 
11 37 10 38 11 40 11 41 10 43 11 43 11 44 11 45 
10 45 11 47 11 46 10 47 11 48 11 47 11 48 10 48 
11 47 11 48 10 48 11 47 11 47 11 47 10 46 11 46 
11 46 10 45 11 45 11 44 11 43 10 43 11 42 11 42 
10 41 11 41 11 40 11 39 10 38 11 38 11 37 10 37 
11 35 11 36 11 34 10 34 11 33 11 32 10 32 11 32 
11 30 10 30 11 29 11 29 11 28 10 28 11 27 11 26 
10 26 11 25 11 25 11 24 10 24 11 23 11 23 10 22 
11 22 11 21 11 21 10 20 11 20 11 20 10 19 11 19 
11 18 11 18 10 17 11 17 11 17 10 16 11 16 11 16 
11 16 10 15 11 14 5194 1526 100 MP stroke
11 15 10 14 11 14 11 13 11 13 10 13 11 13 11 13 
10 12 11 12 11 11 11 12 10 11 11 11 11 11 10 10 
11 10 11 11 11 9 10 10 11 10 11 9 10 9 11 9 
11 9 10 8 11 9 11 8 11 8 10 8 11 8 11 7 
10 8 11 7 11 7 11 7 10 7 11 7 11 7 10 6 
11 6 11 7 11 6 10 6 11 6 11 6 10 5 11 6 
11 5 11 6 10 5 11 5 11 5 10 5 11 5 11 5 
11 4 10 5 11 4 11 5 10 4 11 4 11 4 11 5 
10 4 11 3 11 4 10 4 11 4 11 3 11 4 10 3 
11 4 11 3 10 3 11 4 11 3 11 3 10 3 11 3 
11 3 10 3 11 2 11 3 11 3 10 2 11 3 11 2 
10 3 11 2 11 3 10 2 11 2 11 2 11 3 10 2 
11 2 11 2 10 2 4134 905 100 MP stroke
11 2 11 1 11 2 10 2 11 2 11 1 10 2 11 2 
11 1 11 2 10 1 11 2 11 1 10 1 11 2 11 1 
11 1 10 1 11 2 11 1 10 1 11 1 11 1 11 1 
10 1 11 1 11 1 10 0 11 1 11 1 11 1 10 0 
11 1 11 1 10 0 11 1 11 0 11 1 10 0 11 1 
11 0 10 0 11 1 11 0 11 0 10 0 11 1 11 0 
10 0 11 0 11 0 10 0 11 0 11 0 11 0 10 0 
11 0 11 -1 10 0 11 0 11 0 11 -1 10 0 11 0 
11 -1 10 0 11 -1 11 0 11 -1 10 0 11 -1 11 -1 
10 0 11 -1 11 -1 11 -1 10 0 11 -1 11 -1 10 -1 
11 -1 11 -1 11 -1 10 -1 11 -1 11 -2 10 -1 11 -1 
11 -1 11 -2 10 -1 11 -1 11 -2 10 -1 11 -2 11 -1 
11 -2 10 -2 11 -1 3073 896 100 MP stroke
11 -2 10 -2 11 -2 11 -1 11 -2 10 -2 11 -2 11 -2 
10 -2 11 -3 11 -2 11 -2 10 -2 11 -3 11 -2 10 -3 
11 -2 11 -3 10 -2 11 -3 11 -3 11 -2 10 -3 11 -3 
11 -3 10 -3 11 -3 11 -3 11 -4 10 -3 11 -3 11 -4 
10 -3 11 -4 11 -3 11 -4 10 -4 11 -4 11 -3 10 -4 
11 -5 11 -4 11 -4 10 -4 11 -5 11 -4 10 -5 11 -4 
11 -5 11 -5 10 -5 11 -5 11 -5 10 -5 11 -6 11 -5 
11 -6 10 -5 11 -6 11 -6 10 -6 11 -6 11 -7 11 -6 
10 -6 11 -7 11 -7 10 -7 11 -7 11 -7 11 -7 10 -8 
11 -7 11 -8 10 -8 11 -8 11 -8 10 -9 11 -8 11 -9 
11 -9 10 -9 11 -9 11 -10 10 -10 11 -9 11 -11 11 -10 
10 -10 11 -11 11 -11 10 -11 11 -12 11 -11 11 -12 10 -12 
11 -13 11 -13 10 -13 2013 1457 100 MP stroke
11 -13 11 -13 11 -14 10 -14 11 -15 11 -14 10 -15 11 -16 
11 -16 11 -16 10 -16 11 -17 11 -17 10 -17 11 -18 11 -18 
11 -19 10 -19 11 -20 11 -20 10 -20 11 -21 11 -21 11 -22 
10 -22 11 -23 11 -23 10 -24 11 -24 11 -25 11 -25 10 -26 
11 -26 11 -27 10 -28 11 -28 11 -29 11 -29 10 -30 11 -30 
11 -32 10 -32 11 -32 11 -33 10 -34 11 -34 11 -36 11 -35 
10 -37 11 -37 11 -38 10 -38 11 -39 11 -40 11 -41 10 -41 
11 -42 11 -42 10 -43 11 -43 11 -44 11 -45 10 -45 11 -46 
11 -46 10 -46 11 -47 11 -47 11 -47 10 -48 11 -48 11 -47 
10 -48 11 -48 11 -47 11 -48 10 -47 11 -46 11 -47 10 -45 
11 -45 11 -44 11 -43 10 -43 11 -41 11 -40 10 -38 11 -37 
11 -36 11 -34 10 -32 11 -30 11 -28 10 -26 11 -24 11 -22 
11 -19 10 -17 11 -14 952 4581 100 MP stroke
11 -12 10 -10 11 -6 11 -4 10 -2 899 4615 6 MP stroke
gr

3509 5103 mt 
(p) s
 422 3010 mt  -90 rotate
(|T\(p\)|2XX) s
90 rotate

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 589 2061 a
 /End PSfrag
 589 2061 a 589 820 a
 /Hide PSfrag
 589 820
a -95 872 a Fh(PSfrag)27 b(replacemen)n(ts)p -95 899
685 4 v 589 903 a
 /Unhide PSfrag
 589 903 a 540 908 a
  {
 540 908 a 67 x
Fg(p)540 908 y
  } 0/Place PSfrag
 540 908 a 290 1148 a
  {
 290 1148 a -67 x
Ff(jT)f Fe(\()p Fg(p)p Fe(\))p Ff(j)551 1045 y Fd(2)290
1148 y
  } 1/Place PSfrag
 290 1148 a 551 1239 a
  {
 551 1239 a Fh(0)551 1239
y
  } 2/Place PSfrag
 551 1239 a 491 1330 a
  {
 491 1330 a Fh(0)p Fc(:)p Fh(2)491
1330 y
  } 3/Place PSfrag
 491 1330 a 491 1422 a
  {
 491 1422 a Fh(0)p Fc(:)p
Fh(4)491 1422 y
  } 4/Place PSfrag
 491 1422 a 491 1513 a
  {
 491 1513 a Fh(0)p
Fc(:)p Fh(6)491 1513 y
  } 5/Place PSfrag
 491 1513 a 491 1604 a
  {
 491 1604
a Fh(0)p Fc(:)p Fh(8)491 1604 y
  } 6/Place PSfrag
 491 1604 a 551 1696 a
  {

551 1696 a Fh(1)551 1696 y
  } 7/Place PSfrag
 551 1696 a 514 1762 a
  {
 514
1762 a 542 1731 a Fb(\031)p 542 1745 38 4 v 546 1787
a Fa(4)514 1762 y
  } 8/Place PSfrag
 514 1762 a 515 1853 a
  {
 515 1853 a 542
1822 a Fb(\031)p 542 1836 38 4 v 546 1878 a Fa(2)515
1853 y
  } 9/Place PSfrag
 515 1853 a 484 1944 a
  {
 484 1944 a 511 1914 a Fa(3)p
Fb(\031)p 511 1928 69 4 v 530 1970 a Fa(4)484 1944 y
  } 10/Place PSfrag

484 1944 a 542 2061 a
  {
 542 2061 a Fc(\031)542 2061 y
  } 11/Place PSfrag
 542
2061 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
